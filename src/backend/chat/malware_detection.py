"""Malware detection callbacks"""

import logging

from core.file_upload.enums import AttachmentStatus

from chat.models import ChatConversationAttachment

logger = logging.getLogger(__name__)
security_logger = logging.getLogger("conversations.security")


def conversation_safe_attachment_callback(file_path, *, conversation_id, **kwargs):
    """Callback when a malware scan is completed and unsafe for a conversation attachment."""
    logger.info("File %s for conversation %s is safe", file_path, conversation_id)

    ChatConversationAttachment.objects.filter(
        conversation_id=conversation_id, key=file_path
    ).update(upload_state=AttachmentStatus.READY)


def unknown_attachment_callback(file_path, error_info, *, conversation_id, **kwargs) -> bool:
    """Callback when a malware scan is completed and unknown for a conversation attachment."""
    security_logger.warning(
        "File %s for conversation %s has an unknown reportstatus. Error info: %s",
        file_path,
        conversation_id,
        error_info,
    )

    error_code = error_info.get("error_code")
    if error_code == 413:
        ChatConversationAttachment.objects.filter(
            conversation_id=conversation_id, key=file_path
        ).update(upload_state=AttachmentStatus.FILE_TOO_LARGE_TO_ANALYZE)
        return True

    return False


def conversation_unsafe_attachment_callback(file_path, error_info, *, conversation_id, **kwargs):
    """Callback when a malware scan is completed and unsafe for a conversation attachment."""
    security_logger.warning(
        "File %s for conversation %s is infected with malware. Error info: %s",
        file_path,
        conversation_id,
        error_info,
    )

    ChatConversationAttachment.objects.filter(
        conversation_id=conversation_id, key=file_path
    ).update(upload_state=AttachmentStatus.SUSPICIOUS)
