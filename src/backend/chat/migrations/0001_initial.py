# Generated by Django 5.2.3 on 2025-08-06 16:42

import uuid

import django.core.serializers.json
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models

import django_pydantic_field.compat.django
import django_pydantic_field.fields

import chat.ai_sdk_types


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="ChatConversation",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="primary key for the record as UUID",
                        primary_key=True,
                        serialize=False,
                        verbose_name="id",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="date and time at which a record was created",
                        verbose_name="created on",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="date and time at which a record was last updated",
                        verbose_name="updated on",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        blank=True,
                        help_text="Title of the chat conversation",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "ui_messages",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="UI messages for the chat conversation, sent by frontend, not used",
                    ),
                ),
                (
                    "pydantic_messages",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="Pydantic messages for the chat conversation, used for history",
                    ),
                ),
                (
                    "messages",
                    django_pydantic_field.fields.PydanticSchemaField(
                        blank=True,
                        config=None,
                        default=list,
                        encoder=django.core.serializers.json.DjangoJSONEncoder,
                        help_text="Stored messages for the chat conversation, sent to frontend",
                        schema=django_pydantic_field.compat.django.GenericContainer(
                            list, (chat.ai_sdk_types.UIMessage,)
                        ),
                    ),
                ),
                (
                    "agent_usage",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Agent usage for the chat conversation, provided by OpenAI API",
                    ),
                ),
                (
                    "collection_id",
                    models.CharField(
                        blank=True,
                        help_text="Collection ID for the conversation, used for RAG document search",
                        null=True,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="conversations",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
